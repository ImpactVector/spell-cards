<Window x:Class="SpellCards.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:SpellCards.Controls"
        xmlns:xctk="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
        Title="Spell Cards" Height="600" Width="800" WindowStartupLocation="CenterScreen" Loaded="Window_Loaded" Icon="/SpellCards;component/card.ico">
    <Window.Resources>
        <CollectionViewSource x:Key="SortedCurrentSpells" Source="{Binding  Path=CurrentSpells,UpdateSourceTrigger=PropertyChanged}">
        </CollectionViewSource>
        <RoutedUICommand x:Key="OpenSystemCommand" Text="OpenSystem" />
        <Style x:Key="EditableTabHeaderControl" TargetType="{x:Type local:EditableTabHeaderControl}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type local:EditableTabHeaderControl}">
                        <Grid>

                            <TextBox x:Name="PART_TabHeader" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content, Mode=TwoWay}" Visibility="Collapsed"/>
                            <TextBlock x:Name="PART_TextBlock" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content, Mode=TwoWay}"/>

                        </Grid>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsInEditMode" Value="True">
                                <Trigger.Setters>
                                    <Setter TargetName="PART_TabHeader" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="PART_TextBlock" Property="Visibility" Value="Collapsed"/>
                                </Trigger.Setters>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ItemContainerStyle" TargetType="TabItem">
            <Setter Property="HeaderTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <local:EditableTabHeaderControl
                   Style="{StaticResource EditableTabHeaderControl}">
                            <local:EditableTabHeaderControl.Content>
                                <Binding Path="Name" Mode="TwoWay"/>
                            </local:EditableTabHeaderControl.Content>
                        </local:EditableTabHeaderControl>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Window.CommandBindings>
        <CommandBinding Command="{StaticResource OpenSystemCommand}" Executed="CommandBinding_OpenSystem" />
    </Window.CommandBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="25" />
            <RowDefinition Height="2*" />
            <RowDefinition Height="25" />
            <RowDefinition />
            <RowDefinition Height="25" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Menu Grid.ColumnSpan="4">
            <MenuItem Header="_File">
                <MenuItem Click="Item_Click" Header="_Save" Tag="Save" />
                <Separator />
                <MenuItem Click="Item_Click" Header="Print Class..." Tag="Print" IsEnabled="{Binding Path=IsClassSelected}" />
                <MenuItem Click="Item_Click" Header="Print All Classes..." Tag="PrintAll" IsEnabled="{Binding Path=IsClassSelected}" />
                <Separator />
                <MenuItem Click="Item_Click" Header="Print Character..." Tag="PrintCharacter" IsEnabled="{Binding Path=IsCharacterSelected}" />
                <MenuItem Click="Item_Click" Header="Print All Characters..." Tag="PrintAllCharacters" IsEnabled="{Binding Path=IsCharacterSelected}" />
                <Separator />
                <MenuItem Click="Item_Click" Header="_Import CSV to Class..." Tag="ImportCSV" IsEnabled="{Binding Path=IsClassSelected}" />
                <MenuItem Click="Item_Click" Header="Import New System XML..." Tag="ImportXML" />
                <MenuItem Click="Item_Click" Header="Export System XML..." Tag="ExportXML" IsEnabled="{Binding Path=IsSystemSelected}" />
                <Separator />
                <MenuItem Click="Item_Click" Header="_Exit" Tag="Exit" />
            </MenuItem>
            <MenuItem Header="Game System">
                <MenuItem Header="Switch" ItemsSource="{Binding Path=Config.GameSystems}" IsEnabled="{Binding Path=IsSystemSelected}" >
                    <MenuItem.ItemContainerStyle>
                        <Style TargetType="MenuItem">
                            <Setter Property="Header" Value="{Binding Path=Name}"/>
                            <Setter Property="Command" Value="{Binding Source={StaticResource OpenSystemCommand}}"/>
                            <Setter Property="CommandParameter" Value="{Binding}"/>
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>
                <Separator />
                <MenuItem Click="Item_Click" Header="New..." Tag="NewSystem" />
                <MenuItem Click="Item_Click" Header="Edit..." Tag="EditSystem" IsEnabled="{Binding Path=IsSystemSelected}" />
                <MenuItem Click="Item_Click" Header="Delete..." Tag="DeleteSystem" IsEnabled="{Binding Path=IsSystemSelected}" />
            </MenuItem>
            <MenuItem Header="Class">
                <MenuItem Click="Item_Click" Header="_New Class" Tag="NewClass" IsEnabled="{Binding Path=IsSystemSelected}" />
                <MenuItem Click="Item_Click" Header="_Delete Class" Tag="DelClass" IsEnabled="{Binding Path=IsClassSelected}" />
            </MenuItem>
            <MenuItem Header="Character">
                <MenuItem Click="Item_Click" Header="_New Character" Tag="NewCharacter" IsEnabled="{Binding Path=IsSystemSelected}" />
                <MenuItem Click="Item_Click" Header="_Delete Character" Tag="DelCharacter" IsEnabled="{Binding Path=IsCharacterSelected}" />
            </MenuItem>
            <MenuItem Click="Item_Click" Header="N_ew Spell" Tag="NewSpell" IsEnabled="{Binding Path=IsClassSelected}" />
        </Menu>
        <GroupBox Header="Classes" Grid.Row="1" GotFocus="ClassGroupBox_GotFocus">
            <TabControl ItemsSource="{Binding Path=Classes}" SelectedItem="{Binding Path=CurrentClass}"  
                     IsEnabled="{Binding Path=IsSystemSelected}"
                    ItemContainerStyle="{StaticResource ItemContainerStyle}" >
                <TabControl.ContentTemplate>
                    <DataTemplate>
                        <DataGrid Name="ClassSpellGrid" ItemsSource="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.CurrentClass.Spells, Mode=TwoWay}" 
                              SelectionMode="Single" SelectedItem="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.CurrentClassSpell}" 
                  AutoGenerateColumns="False" AlternatingRowBackground="#FFD1CFCF" CanUserAddRows="False" CanUserSortColumns="True"
                                  >
                            <DataGrid.Columns>
                                <DataGridTemplateColumn Header="Print" >
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox IsChecked="{Binding Mode=TwoWay, Path=Print, UpdateSourceTrigger=PropertyChanged}" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn Header="Level" Binding="{Binding Path=Level}" IsReadOnly="True" SortMemberPath="Level" CanUserSort="True" />
                                <DataGridTextColumn Header="Name" Binding="{Binding Path=Name}" IsReadOnly="True" SortMemberPath="Name" CanUserSort="True" />
                                <DataGridTextColumn Header="School" Binding="{Binding Path=School}" IsReadOnly="True" SortMemberPath="School" CanUserSort="True" />
                            </DataGrid.Columns>
                            <DataGrid.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Click="Item_Click" Header="Check All" Tag="CheckAll" />
                                    <MenuItem Click="Item_Click" Header="Uncheck All" Tag="UncheckAll" />
                                </ContextMenu>
                            </DataGrid.ContextMenu>
                        </DataGrid>
                    </DataTemplate>
                </TabControl.ContentTemplate>
            </TabControl>
        </GroupBox>
        <Button HorizontalAlignment="Center" Grid.Row="2" Click="Item_Click" Tag="AddSpellToCharacter" IsEnabled="{Binding Path=IsSpellAndCharacterSelected}" Width="50" >▼</Button>
        <GroupBox Header="Characters" Grid.Row="3" GotFocus="CharacterGroupBox_GotFocus">
            <TabControl  ItemsSource="{Binding Path=CurrentSystem.Characters}" SelectedItem="{Binding Path=CurrentCharacter}" 
                    IsEnabled="{Binding Path=IsSystemSelected}"
                ItemContainerStyle="{StaticResource ItemContainerStyle}" >
                <TabControl.ContentTemplate>
                    <DataTemplate>
                        <DataGrid ItemsSource="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.CurrentCharacter.Spells, Mode=TwoWay}" 
                        SelectionMode="Single" SelectedItem="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.CurrentCharacterSpell}" 
            AutoGenerateColumns="False" AlternatingRowBackground="#FFD1CFCF" CanUserAddRows="False" CanUserSortColumns="True">
                            <DataGrid.Columns>
                                <DataGridTemplateColumn Header="Print" >
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox IsChecked="{Binding Mode=TwoWay, Path=Print, UpdateSourceTrigger=PropertyChanged}" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn Header="Class" Binding="{Binding Path=ClassName}" IsReadOnly="True" SortMemberPath="ClassName" CanUserSort="True" />
                                <DataGridTextColumn Header="Level" Binding="{Binding Path=Level}" IsReadOnly="True" SortMemberPath="Level" CanUserSort="True" />
                                <DataGridTextColumn Header="Name" Binding="{Binding Path=Name}" IsReadOnly="True" SortMemberPath="Name" CanUserSort="True" />
                                <DataGridTextColumn Header="School" Binding="{Binding Path=School}" IsReadOnly="True" SortMemberPath="School" CanUserSort="True" />
                            </DataGrid.Columns>
                            <DataGrid.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Click="Item_Click" Header="Check All" Tag="CheckAllChar" />
                                    <MenuItem Click="Item_Click" Header="Uncheck All" Tag="UncheckAllChar" />
                                </ContextMenu>
                            </DataGrid.ContextMenu>
                        </DataGrid>
                    </DataTemplate>
                </TabControl.ContentTemplate>
            </TabControl>
        </GroupBox>
        <GridSplitter Grid.Column="1" Grid.RowSpan="3" Grid.Row="1"
                      HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch"
              Background="Black" 
              ShowsPreview="True"
              Width="5"  />
        <!--<TextBlock  Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left" FontFamily="Arial" Visibility="{Binding Path=ClassIndicatorVisibility}">◄</TextBlock>
        <TextBlock  Grid.Row="3" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left" FontFamily="Arial" Visibility="{Binding Path=CharacterIndicatorVisibility}">◄</TextBlock>-->
        <GroupBox Grid.Row="1" Grid.Column="2" Grid.RowSpan="3" Header="Spell" DockPanel.Dock="Top" IsEnabled="{Binding Path=IsSpellSelected}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="25" />
                    <RowDefinition Height="25" />
                    <RowDefinition Height="25" />
                    <RowDefinition Height="25" />
                    <RowDefinition Height="25" />
                    <RowDefinition Height="25" />
                    <RowDefinition Height="25" />
                    <RowDefinition Height="25" />
                    <RowDefinition Height="25" />
                    <RowDefinition Height="25" />
                    <RowDefinition Height="25" />
                    <RowDefinition />
                    <RowDefinition Height="25" />
                    <RowDefinition Height="25" />
                    <RowDefinition Height="25" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="125px"/>
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <TextBlock TextAlignment="Right" VerticalAlignment="Center" Grid.Row="0">Level</TextBlock>
                <TextBlock TextAlignment="Right" VerticalAlignment="Center" Grid.Row="1">Name</TextBlock>
                <TextBlock TextAlignment="Right" VerticalAlignment="Center" Grid.Row="2">School</TextBlock>
                <CheckBox Grid.RowSpan="2" Grid.Row="3" VerticalAlignment="Center" IsChecked="{Binding Path=CurrentSpell.ShowRow1}" ToolTip="Toggle header row 1 visibility" />
                <TextBox TextAlignment="Right" VerticalAlignment="Center" HorizontalAlignment="Right" Width="100px" Grid.Row="3"  Text="{Binding Path=CurrentSpell.Field1Title}" KeyUp="TextBox_KeyUp" ToolTip="Header for left box of row 1"></TextBox>
                <TextBox TextAlignment="Right" VerticalAlignment="Center" HorizontalAlignment="Right" Width="100px" Grid.Row="4" Text="{Binding Path=CurrentSpell.Field2Title}" KeyUp="TextBox_KeyUp" ToolTip="Header for right box of row 1"></TextBox>
                <CheckBox Grid.RowSpan="2" Grid.Row="5" VerticalAlignment="Center" IsChecked="{Binding Path=CurrentSpell.ShowRow2}" ToolTip="Toggle header row 2 visibility" />
                <TextBox TextAlignment="Right" VerticalAlignment="Center" HorizontalAlignment="Right" Width="100px" Grid.Row="5" Text="{Binding Path=CurrentSpell.Field3Title}" KeyUp="TextBox_KeyUp" ToolTip="Header for left box of row 2"></TextBox>
                <TextBox TextAlignment="Right" VerticalAlignment="Center" HorizontalAlignment="Right" Width="100px" Grid.Row="6" Text="{Binding Path=CurrentSpell.Field4Title}" KeyUp="TextBox_KeyUp" ToolTip="Header for right box of row 2"></TextBox>
                <CheckBox Grid.RowSpan="2" Grid.Row="7" VerticalAlignment="Center" IsChecked="{Binding Path=CurrentSpell.ShowRow3}" ToolTip="Toggle header row 3 visibility" />
                <TextBox TextAlignment="Right" VerticalAlignment="Center" HorizontalAlignment="Right" Width="100px" Grid.Row="7" Text="{Binding Path=CurrentSpell.Field5Title}" KeyUp="TextBox_KeyUp" ToolTip="Header for left box of row 3"></TextBox>
                <TextBox TextAlignment="Right" VerticalAlignment="Center" HorizontalAlignment="Right" Width="100px" Grid.Row="8" Text="{Binding Path=CurrentSpell.Field6Title}" KeyUp="TextBox_KeyUp" ToolTip="Header for right box of row 3"></TextBox>
                <TextBlock TextAlignment="Right" VerticalAlignment="Center" Grid.Row="9" Text="Keywords" >
                    <TextBlock.ToolTip>
                        <TextBlock TextAlignment="Left">
                            Short text to display prominently in the middle border of the card.
                            <LineBreak />
                            Suggested keywords for 5e are things like &quot;Concentration&quot;, &quot;Ritual&quot;, &quot;Attack&quot;, &quot;Save&quot;.
                            <LineBreak />
                            Could also be used for material components or attack/save expressions, but space is limited.
                        </TextBlock>
                    </TextBlock.ToolTip>
                </TextBlock>
                <TextBlock TextAlignment="Right" VerticalAlignment="Center" Grid.Row="10" ToolTip="For displaying a page reference for the spell. Space for this field is limited on the card, so using abbreviations (DMG, PHB, etc) is recommended.">Page Ref</TextBlock>
                <TextBlock TextAlignment="Right" VerticalAlignment="Top" Grid.Row="11" ToolTip="The main body of descriptive text for the spell.">Text</TextBlock>
                <TextBlock TextAlignment="Right" VerticalAlignment="Center" Grid.Row="12" Text="Bottom Text">
                    <TextBlock.ToolTip>
                        <TextBlock TextAlignment="Left">
                            Single line of bolded text at the bottom of the card. 
                            <LineBreak />
                            Intended for notable material components (e.g. &quot;Materials: 100gp pearl&quot;) or attack/save expressions (e.g. &quot;Ranged Attack: +5, 1d8 fire&quot;).
                            <LineBreak />
                            Also useful if your game has an odd number of fields and you don't mind having one at the bottom.
                        </TextBlock>
                    </TextBlock.ToolTip>
                </TextBlock>
                <TextBlock TextAlignment="Right" VerticalAlignment="Center" Grid.Row="13" ToolTip="Changes the color of the card's border lines.">Border Color</TextBlock>
                <TextBlock TextAlignment="Right" VerticalAlignment="Center" Grid.Row="14" Text="Font Size Override">
                    <TextBlock.ToolTip>
                        <TextBlock TextAlignment="Left">
                            The text field automatically guesses at the font size that will fit on the card based on a character count.
                            <LineBreak />
                            This field overrides that funtionality.
                            <LineBreak />
                            Useful if the spell text has line breaks or for fine-tuning a card for maximum readability.
                        </TextBlock>
                    </TextBlock.ToolTip>
                </TextBlock>
                <xctk:IntegerUpDown Grid.Column="2" Grid.Row="0" Value="{Binding Path=CurrentSpell.Level}" Width="50px" HorizontalAlignment="Left" />
                <TextBox Grid.Column="2" Grid.Row="1" Text="{Binding Path=CurrentSpell.Name}" KeyUp="TextBox_KeyUp" />
                <TextBox Grid.Column="2" Grid.Row="2" Text="{Binding Path=CurrentSpell.School}" KeyUp="TextBox_KeyUp" />
                <TextBox Grid.Column="2" Grid.Row="3" Text="{Binding Path=CurrentSpell.Field1}" KeyUp="TextBox_KeyUp" />
                <TextBox Grid.Column="2" Grid.Row="4" Text="{Binding Path=CurrentSpell.Field2}" KeyUp="TextBox_KeyUp" />
                <TextBox Grid.Column="2" Grid.Row="5" Text="{Binding Path=CurrentSpell.Field3}" KeyUp="TextBox_KeyUp" />
                <TextBox Grid.Column="2" Grid.Row="6" Text="{Binding Path=CurrentSpell.Field4}" KeyUp="TextBox_KeyUp" />
                <TextBox Grid.Column="2" Grid.Row="7" Text="{Binding Path=CurrentSpell.Field5}" KeyUp="TextBox_KeyUp" />
                <TextBox Grid.Column="2" Grid.Row="8" Text="{Binding Path=CurrentSpell.Field6}" KeyUp="TextBox_KeyUp" />
                <TextBox Grid.Column="2" Grid.Row="9" Text="{Binding Path=CurrentSpell.Keywords}" KeyUp="TextBox_KeyUp" />
                <TextBox Grid.Column="2" Grid.Row="10" Text="{Binding Path=CurrentSpell.PageRef}" KeyUp="TextBox_KeyUp" />
                <ScrollViewer  Grid.Column="2" Grid.Row="11" CanContentScroll="True" VerticalScrollBarVisibility="Auto">
                    <TextBox Text="{Binding Path=CurrentSpell.Text}" VerticalAlignment="Stretch" AcceptsReturn="True" TextWrapping="Wrap" KeyUp="TextBox_KeyUp" />
                </ScrollViewer>
                <TextBox Grid.Column="2" Grid.Row="12" Text="{Binding Path=CurrentSpell.BottomText}" KeyUp="TextBox_KeyUp" />
                <xctk:ColorPicker DisplayColorAndName="True" Grid.Row="13" Grid.Column="2" SelectedColor="{Binding Path=CurrentSpell.BorderColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <TextBox Grid.Column="2" Grid.Row="14" Text="{Binding Path=CurrentSpell.OverrideFontSize}" Width="50px" HorizontalAlignment="Left" KeyUp="TextBox_KeyUp" />
                <TextBlock Grid.Column="2" Grid.Row="14" Margin="75,0,0,0" >ex: "5pt", "8pt"</TextBlock>
            </Grid>
        </GroupBox>
            
        <StatusBar Grid.Row="4" Grid.ColumnSpan="4">
            <StatusBarItem>
                <TextBlock Text="{Binding Path=CurrentSystem.Name}" />
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
